# --- Transfer with SF specific parameters ---

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 0.0
epsilon_finish: 0.0
epsilon_anneal_time: 1

runner: "mt_episode" # the same way to handle multi-task info in runners

buffer_size: 5000

# update the target network every {} episodes
target_update_interval_or_tau: 0.005

# learner />
agent_output_type: "q" # regard psi as q's
learner: "tr_sf_learner"
## for pretrain
r_lambda: 1
w_range_reg: 0.0001
w_range_gate: 30 # w_reg lower bound == 2ï¼Œ lbf:30, smacv1v2:30
## for RL
double_q: True
mixer: tr_dmaq_qatten
# mixer: tr_qatten
task_emb_std: 0.1
cql_alpha: 1. # largely depend on the quality of dataset
cql_type: "base"

# qmix
mixing_embed_dim: 32
hypernet_layers: 2
hypernet_embed: 64

#* pretrain
# /> for LBF
# for visualizing mixing_w
# checkpoint_path: /root/shared-nvme/xyc/MATransferSF/results/transfer/lbforaging/lbf_test/tr_sf/seed_2345_tr_sf_2025-04-12_21-34-30/models/pretrain
# load_step: 260055
# </ for LBF

# /> for SMACv2 (visualize)
# checkpoint_path: /home/amax/xyc/MATr/offpymarl/results/transfer/sc2_v2/sc2_v2_test/tr_sf/seed_4_tr_sf_2025-04-15_19-12-01/models/pretrain/
# load_step: 200005
# </ for SMACv2

lr_decay_rate: 0.0005 # lr will decay to lr/(1 + rate * max_steps) upon pretrain_steps
pretrain_steps: 500005
pretrain_batch_size: 64

ckpt_stage: 0
lr: 0.003
test_interval: 1000
log_interval: 1000
runner_log_interval: 1000
learner_log_interval: 1000
save_model_interval: 200000

# </ learner

# agent type
agent: "tr_sf_rnn"
phi_dim: 64
invdyn_cond_type: "cat"

# mac
mac: "tr_basic_mac"

standardise_returns: False
standardise_rewards: False # not use this for trsf

# params about observation decomposition
id_length: 4
max_agent: 15

# params about mt mixing network
entity_embed_dim: 64
attn_embed_dim: 8
head: 1

name: "tr_sf"
